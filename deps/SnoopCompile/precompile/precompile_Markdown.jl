function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(Markdown._is_mailto), String})
    isdefined(Markdown, Symbol("##skipwhitespace#1")) && precompile(Tuple{getfield(Markdown, Symbol("##skipwhitespace#1")), Bool, typeof(Markdown.skipwhitespace), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
    precompile(Tuple{typeof(Markdown.plain), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}})
    isdefined(Markdown, Symbol("##startswith#4")) && precompile(Tuple{getfield(Markdown, Symbol("##startswith#4")), Bool, Bool, Bool, typeof(Markdown.startswith), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, String})
    isdefined(Markdown, Symbol("##startswith#4")) && precompile(Tuple{getfield(Markdown, Symbol("##startswith#4")), Bool, Bool, Bool, typeof(Markdown.startswith), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Base.SubString{String}})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Code})
    precompile(Tuple{typeof(Markdown.underscore_italic), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.underscore_bold), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.asterisk_italic), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
    isdefined(Markdown, Symbol("##parse_inline_wrapper#15")) && precompile(Tuple{getfield(Markdown, Symbol("##parse_inline_wrapper#15")), Bool, typeof(Markdown.parse_inline_wrapper), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, String})
    precompile(Tuple{typeof(Markdown.underscore_italic), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.escapes), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String, String, String})
    isdefined(Markdown, Symbol("##startswith#9")) && precompile(Tuple{getfield(Markdown, Symbol("##startswith#9")), Bool, Bool, typeof(Markdown.startswith), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Base.Regex})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, Int})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Code, String, Int})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String, String, Int})
    precompile(Tuple{typeof(Markdown.plain), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Header{1}})
    precompile(Tuple{typeof(Markdown.underscore_bold), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Markdown.LaTeX, Int})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Markdown.Link, Int})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Markdown.Italic, Int})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Link, String, Int})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Markdown.Code, Int})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, String})
    precompile(Tuple{typeof(Markdown.linebreak), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.linebreak), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.en_dash), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Italic})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.LaTeX})
    precompile(Tuple{typeof(Markdown.startswith), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, String})
    precompile(Tuple{typeof(Markdown.plain), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.autolink), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.plaininline), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Link})
    precompile(Tuple{typeof(Markdown.escapes), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.image), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.inline_code), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Markdown.MD})
    precompile(Tuple{typeof(Markdown.plain), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Paragraph})
    precompile(Tuple{typeof(Markdown.plain), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.Code})
    precompile(Tuple{typeof(Markdown._is_link), String})
    precompile(Tuple{typeof(Markdown.autolink), Base.GenericIOBuffer{Array{UInt8, 1}}, Markdown.MD})
end
