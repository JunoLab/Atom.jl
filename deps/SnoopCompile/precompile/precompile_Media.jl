function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(Media.render), Juno.Inline, String})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Int64})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Module})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Nothing})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Atom.Undefined})
    precompile(Tuple{typeof(Media.__init__)})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Symbol})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Type{Int}})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Atom.EvalError{StackOverflowError}})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Atom.EvalError{Atom.DisplayError}})
    precompile(Tuple{typeof(Media.render), Juno.Inline, typeof(identity)})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Base.Docs.Text{String}})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Method})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Juno.LazyTree})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Base.MethodList})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Juno.Model})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Juno.Link})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Juno.Tree})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Juno.Row})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Markdown.MD})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Hiccup.Node{:span}})
    precompile(Tuple{typeof(Media.render), Juno.Inline, Hiccup.Node{:div}})
end
